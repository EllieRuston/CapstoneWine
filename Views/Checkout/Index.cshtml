@model CapstoneWine.Models.ViewModels.CartViewModel
@{
	ViewData["Title"] = "Checkout";
}


<table class="table text-white">
	<tr>
		<th>Product</th>
		<th>Quantity</th>
		<th>Price</th>
		<th>Total</th>
	</tr>
	@foreach (var item in Model.CartItems)
	{
		<tr>
			<td>@item.ProductName</td>
			<td>@item.Quantity</td>
			<td>@item.Price.ToString("C2")</td>
			<td>@Model.CartItems.Where(x => x.ProductId == item.ProductId).Sum(x => x.Quantity * x.Price).ToString("C2")</td>
		</tr>
	}
	<tr>
		<td class="text-right" colspan="4">Grand Total: @Model.GrandTotal.ToString("C2")</td>
	</tr>
	<tr>
		<td class="text-right" colspan="4">
			<div class="text-end">
				<div class="btn-group">
					@*<a class="btn btn-outline-primary" asp-action="CompleteOrder">
					Complete order
					</a>*@
					<div class="text-center" id="paypal-btn"></div>
					<span style="padding:5px"></span>
					<a class="btn btn-outline-success" asp-controller="Home" asp-action="Index">
						Add more items
					</a>
				</div>
			</div>
		</td>
	</tr>
</table>

@section Scripts{

	<script src="https://www.paypalobjects.com/api/checkout.js"></script>

	<script>
		let a = @Model.GrandTotal.ToString();
		let _total = a;

		paypal.Button.render({
			//Configure environment
			env: 'sandbox',
			client: {
				sandbox: 'AcKRtgL4i68EZ2ZYuYUx3ilihAg2YhL5dtF_m19A8MjBWVOn6ewNS4M_uV8gA3xi98zTcUq38gUHbVFx'
			},

			//Customize button
			locale: 'en_US',
			style: {
				size: 'small',
				color: 'gold',
				shape: 'rect'
			},
			commit: true,

			//Set up a payment
			payment: function (data, actions) {
				return actions.payment.create({
					transactions: [{
						amount: {
							total: _total,
							currency: 'USD'
						}
					}]
				});
			},

			//Execute the payment
			onAuthorize: function (data, actions) {
				return actions.payment.execute().then(function () {
					var url = '@Url.Action("CompleteOrder", "Orders", new { })';
					window.location.href = url;
				});
			}

		}, '#paypal-btn')
	</script>
}


@*<script>
	const fundingSources = [
		paypal.FUNDING.PAYPAL,
		paypal.FUNDING.CARD
	];

	for (const fundingSource of fundingSources) {

		paypal
			.Buttons({
				fundingSource,

				style: {
					layout: 'vertical',
					shape: 'rect'
				},

				createOrder: function (data, actions) {
					const createOrderPayload = {
						purchase_units: [
							{
								amount: {
									value: "88.44",
								},
							},
						],
					};

					return actions.order.create(createOrderPayload);
				},

				onApprove: function (data, actions) {

				},
			})
			.render("#paypal-button-container");
	}

//</script>*@
