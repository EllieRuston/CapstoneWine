@model CapstoneWine.Models.ViewModels.SubViewModel
@{
	ViewData["Title"] = "Checkout";
}
@if (Model.SubItems.Count > 0)
{
	<div>
		<div class="col">
			<h1>
				Order Details
			</h1>
			<table class="table text-white">
				<tr>
					<th>Subscrption</th>
					<th>Type</th>
					<th>Bottle price</th>
					<th>Shipping</th>
					<th>Total</th>
				</tr>
				@foreach (var item in Model.SubItems)
				{
					<tr>
						<td>@item.ProductName</td>
						<td>@item.Type</td>
						<td>@item.NumOfBottles x @item.BottlePrice.ToString("C2") = @item.Total.ToString("C2")</td>
						@*Shipping = Freq * PriceToDel*@
						<td>@item.Frequency x @item.PricePerDel.ToString("C2") = @item.Shipping.ToString("C2")</td>
						@*Total = NumOfBottles * BtlPrice*@
						<td>@Model.SubItems.Where(x => x.ProductId == item.ProductId).Sum(x => x.Total + x.Shipping).ToString("C2")</td>
					</tr>
				}
				<tr>
					@*Calculated in the homecontroller 

					(Total + Shipping)*@
					<td class="text-right" colspan="4">Grand Total: @Model.GrandTotal.ToString("C2")</td>
				</tr>
				<tr>
					<td>
						<div>
							<label class="label">Name:</label>
							<input class="input text-white" autocomplete="username" aria-required="true" placeholder="John Smith" />
							<span class="text-danger"></span>

							<label class="label">Email:</label>
							<input class="input text-white" autocomplete="username" aria-required="true" placeholder="name@example.com" />
							<span class="text-danger"></span>

							<label class="label">Mobile:</label>
							<input class="input text-white" autocomplete="username" aria-required="true" placeholder="+64 123 456" />
							<span class="text-danger"></span>

							<label class="label">Shipping Address:</label>
							<input class="input text-white" aria-required="true" placeholder="123 Boluvard Street" />
							<span class="text-danger"></span>

							<label class="label">Delivery Instructions</label>
							<input class="input text-white" placeholder="eg: Leave at backdoor" />
							<span class="text-danger"></span>
						</div>
					</td>
				</tr>

			</table>
		</div>
		<div class="col">
			<div class="text-end">
				<div class="btn-group">
					<a class="btn btn-outline-success" asp-controller="Home" asp-action="SubCart">Back</a>
					<span style="padding:0px"></span>
					<a class="btn btn-outline-success" asp-controller="Home" asp-action="Subscription">Choose Subscription</a>
					<span style="padding:0px"></span>
					<div id="paypal-btn"></div>
				</div>
			</div>
		</div>
	</div>
}
else
{
	<h1>No Subcription Selected</h1>
	<a class="btn btn-outline-success" asp-controller="Home" asp-action="Subscription">Choose Subscription</a>
}
@section Scripts{

	<script src="https://www.paypalobjects.com/api/checkout.js"></script>

	<script>
		let a = @Model.GrandTotal.ToString();//sets the displayed total in the paypal window to be grandtotal
		let _total = a;

		paypal.Button.render({
			//Configure environment
			env: 'sandbox',
			client: {
				sandbox: 'AQJ-nomYmdcrcJJa_kZYrA-Lzy1AdtFLCMYgwwyBhOxumCXDaQ4r7VtkGAcyDMqZhfVvz27iS7mmbgXW'//this is the client id -needed to receive payments
			},

			//Customize button
			locale: 'en_US',
			style: {
				size: 'large',
				color: 'white',//Silver, White, Blue, Gold
				shape: 'pill'
			},
			commit: true,

			//Set up a payment
			payment: function (data, actions) {
				return actions.payment.create({
					transactions: [{
						amount: {
							total: _total,
							currency: 'USD'//as its usd, paypal converts payment to NZD automatically
						}
					}]
				});
			},

			//Execute the payment
			onAuthorize: function (data, actions) {
				return actions.payment.execute().then(function () {
					var url = '@Url.Action("Shop", "Home", new { })';//page sent to after order completed
					window.location.href = url;
				});
			}

		}, '#paypal-btn')
	</script>
}
